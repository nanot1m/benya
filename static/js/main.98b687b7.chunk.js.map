{"version":3,"sources":["serviceWorker.ts","components/Page.tsx","components/Card.tsx","components/CardTitle.tsx","components/CardList.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","Page","styled","Div100vh","CardOuter","div","Slide","CardInner","Card","children","style","rest","CardTitle","SliderDot","StyledSlider","Slider","CardList","props","infinite","arrows","variableWidth","centerMode","dots","customPaging","focusOnSelect","accessibility","ReactDOM","render","width","height","paddingTop","paddingLeft","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yMAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,4BCfOC,EAAOC,YAAOC,KAAV,uDAAGD,CAAH,qF,QCAXE,EAAYF,IAAOG,IAAV,sEAAGH,CAAH,0lBAyCTI,EAAQJ,IAAOG,IAAV,kEAAGH,CAAH,6DAMLK,EAAYL,IAAOG,IAAV,sEAAGH,CAAH,qDAMFM,EAAyD,SAAC,GAAD,IACpEC,EADoE,EACpEA,SACAC,EAFoE,EAEpEA,MACGC,EAHiE,2CAKpE,kBAACL,EAAD,CAAOI,MAAOA,GACZ,kBAACN,EAAcO,EACb,kBAACJ,EAAD,KAAYE,MC7DLG,EAAYV,IAAOG,IAAV,4DAAGH,CAAH,6V,iBCKhBW,G,YAAYX,IAAOG,IAAV,0EAAGH,CAAH,+kBA8BTY,EAAeZ,YAAOa,KAAV,6EAAGb,CAAH,yIAgBLc,EAAqB,SAAAC,GAAK,OACrC,kBAACH,EAAD,CACEI,UAAU,EACVC,QAAQ,EACRC,eAAa,EACbC,YAAU,EACVC,MAAI,EACJC,aAAc,kBAAM,kBAACV,EAAD,OACpBW,eAAa,EACbC,eAAa,GAEZR,EAAMR,WCTXiB,IAASC,OAAO,mBA7ChB,WACE,OACE,kBAAC1B,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,yBACES,MAAO,CACLkB,MAAO,IACPC,OAAQ,IACRC,WAAY,GACZC,YAAa,KAGf,kBAACnB,EAAD,gBAGJ,kBAAC,EAAD,KACE,yBACEF,MAAO,CACLkB,MAAO,IACPC,OAAQ,IACRC,WAAY,GACZC,YAAa,KAGf,kBAACnB,EAAD,gBAGJ,kBAAC,EAAD,KACE,yBACEF,MAAO,CACLkB,MAAO,IACPC,OAAQ,IACRC,WAAY,GACZC,YAAa,KAGf,kBAACnB,EAAD,oBAQI,MAASoB,SAASC,eAAe,SLkF3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.98b687b7.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import styled from \"styled-components/macro\";\nimport Div100vh from \"react-div-100vh\";\n\nexport const Page = styled(Div100vh)`\n  background: linear-gradient(\n    180deg,\n    #ebf3fa 9.85%,\n    #dde7f3 53.92%,\n    #e6f0f9 100%\n  );\n`;\n","import React from \"react\";\nimport styled from \"styled-components/macro\";\n\nconst CardOuter = styled.div`\n  border-radius: 24px;\n  box-shadow: 16px 4px 64px rgba(18, 61, 101, 0.3),\n    -16px -16px 40px rgba(255, 255, 255, 0.8),\n    inset -8px -6px 80px rgba(255, 255, 255, 0.18);\n  z-index: 1;\n  position: relative;\n  flex-shrink: 0;\n  display: inline-block;\n  outline: transparent;\n\n  &::before {\n    content: \"\";\n    position: absolute;\n    left: -1px;\n    right: -1px;\n    top: -1px;\n    bottom: -1px;\n    z-index: 0;\n    background: linear-gradient(\n      135deg,\n      #fff 26.33%,\n      rgba(219, 230, 242, 0) 50.71%,\n      #8f9fae 100%\n    );\n    border-radius: 24px;\n  }\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    z-index: 1;\n    background: linear-gradient(200.6deg, #ebf2f9 19.14%, #c6d7eb 154.68%);\n    border-radius: 24px;\n  }\n`;\n\nconst Slide = styled.div`\n  text-align: center;\n  padding-left: 24px;\n  padding-right: 24px;\n`;\n\nconst CardInner = styled.div`\n  text-align: initial;\n  position: relative;\n  z-index: 2;\n`;\n\nexport const Card: React.FC<React.ComponentProps<typeof CardOuter>> = ({\n  children,\n  style,\n  ...rest\n}) => (\n  <Slide style={style}>\n    <CardOuter {...rest}>\n      <CardInner>{children}</CardInner>\n    </CardOuter>\n  </Slide>\n);\n","import styled from \"styled-components/macro\";\n\nexport const CardTitle = styled.div`\n  font-family: Teko, sans-serif;\n  font-style: italic;\n  font-weight: bold;\n  font-size: 28px;\n  line-height: 100%;\n  background-image: linear-gradient(-90deg, #202f45, rgba(110, 139, 178, 0.4));\n  background-clip: text;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  display: inline-block;\n  padding-left: 4px;\n  padding-right: 4px;\n  margin-left: -4px;\n  margin-right: -4px;\n`;\n","import React from \"react\";\nimport Slider from \"react-slick\";\nimport styled from \"styled-components/macro\";\n\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nconst SliderDot = styled.div`\n  display: inline-block;\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n  position: relative;\n  background: linear-gradient(87.87deg, #ffffff 3.58%, #587ca5 305.99%);\n  &:after {\n    content: \"\";\n    border-radius: 50%;\n    position: absolute;\n    top: 1px;\n    bottom: 1px;\n    left: 1px;\n    right: 1px;\n    box-shadow: 2px 1px 3px rgba(24, 55, 91, 0.2),\n      -2px -1px 4px rgba(255, 255, 255, 0.4),\n      inset -4px -3px 4px rgba(79, 98, 120, 0.2),\n      inset 3px 3px 5px rgba(213, 230, 245, 0.4);\n  }\n\n  .slick-active & {\n    &:after {\n      background: linear-gradient(106.79deg, #ffffff -62.32%, #587ca5 190.73%);\n      box-shadow: inset 2px 2px 3px rgba(79, 98, 120, 0.9),\n        inset 3px 3px 5px rgba(213, 230, 245, 0.4);\n    }\n  }\n`;\n\nconst StyledSlider = styled(Slider)`\n  .slick-track {\n    padding-top: 80px;\n    padding-bottom: 80px;\n    display: flex;\n  }\n\n  .slick-dots {\n    height: 40px;\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n  }\n`;\n\nexport const CardList: React.FC = props => (\n  <StyledSlider\n    infinite={false}\n    arrows={false}\n    variableWidth\n    centerMode\n    dots\n    customPaging={() => <SliderDot />}\n    focusOnSelect\n    accessibility\n  >\n    {props.children}\n  </StyledSlider>\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Page } from \"./components/Page\";\nimport { Card } from \"./components/Card\";\nimport { CardTitle } from \"./components/CardTitle\";\nimport { CardList } from \"./components/CardList\";\n\nfunction App() {\n  return (\n    <Page>\n      <CardList>\n        <Card>\n          <div\n            style={{\n              width: 228,\n              height: 358,\n              paddingTop: 38,\n              paddingLeft: 32\n            }}\n          >\n            <CardTitle>HRTBT</CardTitle>\n          </div>\n        </Card>\n        <Card>\n          <div\n            style={{\n              width: 228,\n              height: 358,\n              paddingTop: 38,\n              paddingLeft: 32\n            }}\n          >\n            <CardTitle>BELLK</CardTitle>\n          </div>\n        </Card>\n        <Card>\n          <div\n            style={{\n              width: 228,\n              height: 358,\n              paddingTop: 38,\n              paddingLeft: 32\n            }}\n          >\n            <CardTitle>JERKN</CardTitle>\n          </div>\n        </Card>\n      </CardList>\n    </Page>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}